<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>CRM Dashboard</title>
        <!-- Tailwind CSS -->
        <script src="https://cdn.tailwindcss.com"></script>
        <!-- Highcharts -->
        <script src="https://code.highcharts.com/highcharts.js"></script>

        <!-- jQuery & jQuery UI (For Dragging and Minimizing) -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

        <!-- FontAwesome -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

        <!-- Google Fonts -->
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0" />

        <style>
            /* Global Styling */
            body {
                font-family: "Poppins", sans-serif;
                background: #f4f4f4;
                transition: all 0.3s ease-in-out;
            }

            /* Header */
            .header {
                background: #ffffff;
                padding: 15px 20px;
                display: flex;
                align-items: center;
                justify-content: space-between;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
                position: fixed;
                width: 100%;
                top: 0;
                left: 0;
                height: 60px;
                z-index: 10;
                transition: left 0.4s ease-in-out;
            }
            .logo img {
                width: 140px;
            }
            .icons {
                display: flex;
                align-items: center;
            }
            .icons div {
                margin-left: 15px;
                cursor: pointer;
                font-size: 1.3rem;
                position: relative;
            }
            .icons div span {
                position: absolute;
                top: -5px;
                right: -5px;
                background: red;
                color: white;
                font-size: 0.7rem;
                padding: 2px 6px;
                border-radius: 50%;
            }
            .profile img {
                width: 40px;
                height: 40px;
                border-radius: 50%;
                margin-left: 10px;
            }

            /* User Profile */
            .user-profile {
                display: flex;
                align-items: center;
                padding: 15px;
            }
            .user-profile img {
                width: 40px;
                height: 40px;
                border-radius: 50%;
                margin-right: 10px;
            }

            /* Main Content */
            .main-container {
                margin-left: 270px;
                padding: 20px;
                margin-top: 80px;
                transition: margin-left 0.4s ease-in-out;
            }
            .main-container.full {
                margin-left: 85px;
            }

            /* Responsive Design */
            @media (max-width: 1024px) {
                .sidebar {
                    width: 85px;
                }
                .main-container {
                    margin-left: 85px;
                }
            }
            /* Importing Google Fonts - Poppins */
            @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
                font-family: "Poppins", sans-serif;
            }
            body {
                min-height: 100vh;
                background: linear-gradient(#f1faff, #cbe4ff);
            }
            .sidebar {
                position: fixed;
                width: 270px;
                border-radius: 16px;
                background: #151a2d;
                height: calc(100vh - 32px);
                transition: all 0.4s ease;
            }
            .sidebar.collapsed {
                width: 85px;
            }
            .sidebar .sidebar-header {
                display: flex;
                position: relative;
                padding: 10px 20px;
                align-items: center;
                justify-content: space-between;
            }
            .sidebar-header .header-logo img {
                width: 46px;
                height: 46px;
                display: block;
                object-fit: contain;
                border-radius: 50%;
            }
            .sidebar-header .toggler {
                width: 35px;
                color: #151a2d;
                border: none;
                cursor: pointer;
                display: flex;
                background: #fff;
                align-items: center;
                justify-content: center;
                border-radius: 8px;
                transition: 0.4s ease;
            }
            .sidebar-header .sidebar-toggler {
                position: absolute;
                right: 20px;
            }
            .sidebar-header .menu-toggler {
                display: none;
            }
            .sidebar.collapsed .sidebar-header .toggler {
                transform: translate(-4px, 65px);
            }
            .sidebar-header .toggler:hover {
                background: #dde4fb;
            }
            .sidebar-header .toggler span {
                font-size: 1.75rem;
                transition: 0.4s ease;
            }
            .sidebar.collapsed .sidebar-header .toggler span {
                transform: rotate(180deg);
            }
            .sidebar-nav .nav-list {
                list-style: none;
                display: flex;
                gap: 4px;
                padding: 0 15px;
                flex-direction: column;
                transform: translateY(15px);
                transition: 0.4s ease;
            }
            .sidebar.collapsed .sidebar-nav .primary-nav {
                transform: translateY(65px);
            }
            .sidebar-nav .nav-link {
                color: #fff;
                display: flex;
                gap: 12px;
                white-space: nowrap;
                border-radius: 8px;
                padding: 12px 15px;
                align-items: center;
                text-decoration: none;
                transition: 0.4s ease;
            }
            .sidebar.collapsed .sidebar-nav .nav-link {
                border-radius: 12px;
            }
            .sidebar .sidebar-nav .nav-link .nav-label {
                transition: opacity 0.3s ease;
            }
            .sidebar.collapsed .sidebar-nav .nav-link .nav-label {
                opacity: 0;
                pointer-events: none;
            }
            .sidebar-nav .nav-link:hover {
                color: #151a2d;
                background: #fff;
            }
            .sidebar-nav .nav-item {
                position: relative;
            }
            .sidebar-nav .nav-tooltip {
                position: absolute;
                top: -10px;
                opacity: 0;
                color: #151a2d;
                display: none;
                pointer-events: none;
                padding: 6px 12px;
                border-radius: 8px;
                white-space: nowrap;
                background: #fff;
                left: calc(100% + 25px);
                box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
                transition: 0s;
            }
            .sidebar.collapsed .sidebar-nav .nav-tooltip {
                display: block;
            }
            .sidebar-nav .nav-item:hover .nav-tooltip {
                opacity: 1;
                pointer-events: auto;
                transform: translateY(50%);
                transition: all 0.4s ease;
            }
            .sidebar-nav .secondary-nav {
                position: absolute;
                bottom: 15%;
                width: 100%;
            }
            /* Responsive media query code for small screens */
            @media (max-width: 1024px) {
                .sidebar {
                    height: 56px;
                    margin: 13px;
                    overflow-y: hidden;
                    scrollbar-width: none;
                    width: calc(100% - 26px);
                    max-height: calc(100vh - 26px);
                }
                .sidebar.menu-active {
                    overflow-y: auto;
                }
                .sidebar .sidebar-header {
                    position: sticky;
                    top: 0;
                    z-index: 20;
                    border-radius: 16px;
                    background: #151a2d;
                    padding: 8px 10px;
                }
                .sidebar-header .header-logo img {
                    width: 40px;
                    height: 40px;
                }
                .sidebar-header .sidebar-toggler,
                .sidebar-nav .nav-item:hover .nav-tooltip {
                    display: none;
                }
                .sidebar-header .menu-toggler {
                    display: flex;
                    height: 30px;
                    width: 30px;
                }
                .sidebar-header .menu-toggler span {
                    font-size: 1.3rem;
                }
                .sidebar .sidebar-nav .nav-list {
                    padding: 0 10px;
                }
                .sidebar-nav .nav-link {
                    gap: 10px;
                    padding: 10px;
                    font-size: 0.94rem;
                }
                .sidebar-nav .nav-link .nav-icon {
                    font-size: 1.37rem;
                }
                .sidebar-nav .secondary-nav {
                    position: relative;
                    bottom: 0;
                    margin: 40px 0 30px;
                }
            }

            /* Main Container */
            .main-container {
                margin-left: 270px;
                padding: 20px;
                margin-top: 90px;
                transition: margin-left 0.4s ease-in-out;
            }
            .main-container.full {
                margin-left: 85px;
            }

            /* KPI Panels */
            .kpi-container {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
                gap: 20px;
                margin-top: 20px;
            }
            .kpi-card {
                background: white;
                padding: 20px;
                border-radius: 12px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                display: flex;
                align-items: center;
                justify-content: space-between;
                min-height: 160px;
                position: relative;
                cursor: grab;
                transition: all 0.3s ease-in-out;
            }
            .chart-container {
                width: 120px;
                height: 120px;
                flex-shrink: 0;
            }
            .kpi-content {
                flex-grow: 1;
                padding-left: 15px;
            }
            .kpi-title {
                font-size: 1.2rem;
                font-weight: 600;
                color: #333;
            }
            .kpi-value {
                font-size: 2rem;
                font-weight: bold;
                margin-top: 5px;
            }

            .kpi-chart-content {
                flex-grow: 1;
                padding-left: 15px;
            }
            .kpi-chart-title {
                font-size: 1rem;
                font-weight: 500;
                color: #333;
            }
            .kpi-chart-value {
                font-size: 1rem;
                margin-top: 5px;
            }

            .kpi-footer {
                font-size: 0.9rem;
                color: #666;
                margin-top: 5px;
            }

            /* Minimize/Maximize Buttons */
            .kpi-actions {
                position: absolute;
                top: 10px;
                right: 10px;
                display: flex;
                gap: 10px;
            }
            .kpi-actions i {
                cursor: pointer;
                color: #666;
                font-size: 1.2rem;
                transition: color 0.3s ease-in-out;
            }
            .kpi-actions i:hover {
                color: #333;
            }

            /* Minimized State */
            .kpi-card.minimized {
                min-height: 50px;
                height: 50px;
                overflow: hidden;
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 10px;
                font-size: 1rem;
            }
            .minimized .kpi-content,
            .minimized .chart-container {
                display: none;
            }
            .minimized .minimized-summary {
                display: block;
            }
            .minimized-summary {
                display: none;
                font-weight: bold;
            }

            /* Additional Panels for Expenses & Refunds */
            .chart-panel {
                background: white;
                padding: 20px;
                border-radius: 12px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                margin-top: 20px;
            }
            .chart-title {
                font-size: 1.2rem;
                font-weight: 600;
                color: #333;
                margin-bottom: 10px;
            }

            /* Responsive */
            @media (max-width: 1024px) {
                .main-container {
                    margin-left: 85px;
                }
                .chart-container {
                    width: 100px;
                    height: 100px;
                }
            }
			
			
			
			
			/* Jira-Style Kanban Board */
.todo-panel {
    background: white;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    margin-top: 20px;
}

/* Kanban Container */
.todo-container {
    display: flex;
    gap: 15px;
    overflow-x: auto;
    padding: 10px 0;
}

/* Columns */
.todo-column {
    flex: 1;
    min-width: 250px;
    background: #f4f4f4;
    border-radius: 8px;
    padding: 10px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: background 0.3s ease-in-out;
}

/* Column Titles */
.todo-column h3 {
    font-size: 1rem;
    font-weight: 600;
    padding: 10px;
    border-radius: 4px;
    color: white;
}

/* Color Coding */
.todo-plan h3 { background: #FFC107; } /* Yellow */
.todo-todo h3 { background: #FF5722; } /* Orange */
.todo-inprogress h3 { background: #03A9F4; } /* Blue */
.todo-done h3 { background: #4CAF50; } /* Green */
.todo-review h3 { background: #9C27B0; } /* Purple */

/* Task Items */
.todo-item {
    background: white;
    padding: 12px;
    margin: 8px;
    border-radius: 6px;
    cursor: grab;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    transition: transform 0.2s ease-in-out;
    border-left: 5px solid;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* Dragging Effect */
.todo-item:active {
    transform: scale(1.05);
}

/* Status Colors */
.todo-plan .todo-item { border-left-color: #FFC107; }
.todo-todo .todo-item { border-left-color: #FF5722; }
.todo-inprogress .todo-item { border-left-color: #03A9F4; }
.todo-done .todo-item { border-left-color: #4CAF50; }
.todo-review .todo-item { border-left-color: #9C27B0; }

/* Add Task Button */
.add-task-btn {
    background: #007bff;
    color: white;
    padding: 8px 12px;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 10px;
}

.add-task-btn:hover {
    background: #0056b3;
}

/* Chat Widget Container */
.chat-widget {
    background: white;
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: row;
    gap: 15px;
    height: 300px;
}

/* Chat User List Sidebar */
.chat-users {
    width: 30%;
    border-right: 2px solid #eee;
    overflow-y: auto;
}

/* Chat User Item */
.chat-user {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 8px;
    cursor: pointer;
    border-radius: 5px;
    transition: background 0.3s ease-in-out;
}

.chat-user:hover {
    background: #f4f4f4;
}

/* User Profile Picture */
.chat-user img {
    width: 35px;
    height: 35px;
    border-radius: 50%;
}

/* User Status Badge */
.user-status {
    width: 10px;
    height: 10px;
    border-radius: 50%;
}

/* Status Colors */
.online { background: #4CAF50; }  /* Green */
.offline { background: #9E9E9E; } /* Grey */
.away { background: #FFC107; }    /* Yellow */

/* Chat Messages */
.chat-messages {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    overflow-y: auto;
}

/* Chat Messages Display */
.message-container {
    flex-grow: 1;
    overflow-y: auto;
    padding: 5px;
}

/* Individual Messages */
.message {
    max-width: 75%;
    padding: 10px;
    border-radius: 8px;
    margin: 5px 0;
    display: inline-block;
    clear: both;
}

/* Sent Messages */
.sent {
    background: #007bff;
    color: white;
    text-align: right;
    align-self: flex-end;
}

/* Received Messages */
.received {
    background: #e0e0e0;
    color: black;
}

/* Chat Input Box */
.chat-input {
    display: flex;
    align-items: center;
    border-top: 2px solid #eee;
    padding: 10px;
}

.chat-input input {
    flex-grow: 1;
    border: none;
    padding: 8px;
    border-radius: 5px;
    outline: none;
}

.chat-input button {
    background: #007bff;
    color: white;
    border: none;
    padding: 8px 12px;
    margin-left: 10px;
    border-radius: 5px;
    cursor: pointer;
}

.chat-input button:hover {
    background: #0056b3;
}

/* Responsive */
@media (max-width: 768px) {
    .chat-widget {
        flex-direction: column;
        height: 400px;
    }
    .chat-users {
        width: 100%;
        border-right: none;
        border-bottom: 2px solid #eee;
    }
}


        </style>
    </head>
    <body>
        <!-- Header -->
        <div class="header">
            <div class="flex items-center">
                <button class="toggler" onclick="toggleSidebar()">☰</button>
                <div class="logo">
                    <img src="https://27a3c1b301e1ef0ca96a61fae961deaa.cdn.bubble.io/f1735576191355x208459808807400350/crm-black.svg" alt="CRM Logo" />
                </div>
            </div>

            <!-- Search Bar -->
            <div class="relative w-1/3 hidden md:block">
                <input type="text" placeholder="Search..." class="w-full px-4 py-2 rounded-full border border-gray-300 focus:ring focus:ring-blue-300 outline-none" />
                <i class="fas fa-search absolute right-4 top-3 text-gray-500"></i>
            </div>

            <!-- Icons and Profile -->
            <div class="icons flex">
                <div><i class="fas fa-bell"></i><span>4</span></div>
                <div><i class="fas fa-envelope"></i><span>3</span></div>
                <div><i class="fas fa-cog"></i></div>
                <div class="profile">
                    <img src="https://xsgames.co/randomusers/avatar.php?g=female" alt="User Profile" />
                </div>
            </div>
        </div>

        <aside class="sidebar">
            <!-- Sidebar header -->
            <header class="sidebar-header">
                <a href="#" class="header-logo">
                    <img src="https://media.licdn.com/dms/image/v2/D4E0BAQHSuKCv6qZqAA/company-logo_200_200/company-logo_200_200/0/1700231346829?e=2147483647&v=beta&t=jGdZ5i4Ps9QWgTBvMupNgg4aURKtI7FLQohSlMCRRH8" alt="CodingNepal" />
                </a>
                <button class="toggler sidebar-toggler">
                    <span class="material-symbols-rounded">chevron_left</span>
                </button>
                <button class="toggler menu-toggler">
                    <span class="material-symbols-rounded">menu</span>
                </button>
            </header>

            <nav class="sidebar-nav">
                <!-- Primary top nav -->
                <ul class="nav-list primary-nav">
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <span class="nav-icon material-symbols-rounded">dashboard</span>
                            <span class="nav-label">Dashboard</span>
                        </a>
                        <span class="nav-tooltip">Dashboard</span>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <span class="nav-icon material-symbols-rounded">calendar_today</span>
                            <span class="nav-label">Calendar</span>
                        </a>
                        <span class="nav-tooltip">Calendar</span>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <span class="nav-icon material-symbols-rounded">notifications</span>
                            <span class="nav-label">Notifications</span>
                        </a>
                        <span class="nav-tooltip">Notifications</span>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <span class="nav-icon material-symbols-rounded">group</span>
                            <span class="nav-label">Team</span>
                        </a>
                        <span class="nav-tooltip">Team</span>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <span class="nav-icon material-symbols-rounded">insert_chart</span>
                            <span class="nav-label">Analytics</span>
                        </a>
                        <span class="nav-tooltip">Analytics</span>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <span class="nav-icon material-symbols-rounded">star</span>
                            <span class="nav-label">Bookmarks</span>
                        </a>
                        <span class="nav-tooltip">Bookmarks</span>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <span class="nav-icon material-symbols-rounded">settings</span>
                            <span class="nav-label">Settings</span>
                        </a>
                        <span class="nav-tooltip">Settings</span>
                    </li>
                </ul>

                <!-- Secondary bottom nav -->
                <ul class="nav-list secondary-nav">
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <span class="nav-icon material-symbols-rounded">account_circle</span>
                            <span class="nav-label">Profile</span>
                        </a>
                        <span class="nav-tooltip">Profile</span>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <span class="nav-icon material-symbols-rounded">logout</span>
                            <span class="nav-label">Logout</span>
                        </a>
                        <span class="nav-tooltip">Logout</span>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Main Container -->
        <div id="mainContainer" class="main-container">
            <h2 class="text-2xl font-bold">Dashboard</h2>

            <!-- KPI Panels -->
            <div id="kpiContainer" class="kpi-container">
                <div class="kpi-card">
                    <div id="salesChart" class="chart-container"></div>
                    <div class="kpi-content">
                        <p class="kpi-value">$56,950</p>
                    </div>
                    <p class="minimized-summary">TOP SELLER TOTAL: $56,950</p>
                    <div class="kpi-actions">
                        <i class="fas fa-minus minimize"></i>
                        <i class="fas fa-expand maximize hidden"></i>
                    </div>
                </div>
                <div class="kpi-card">
                    <div id="revenueChart" class="chart-container"></div>
                    <div class="kpi-content">
                        <p class="kpi-value">$750,000 / $250,000</p>
                    </div>
                    <p class="minimized-summary">REVENUE / EXPENSES: $750,000 / $250,000</p>
                    <div class="kpi-actions">
                        <i class="fas fa-minus minimize"></i>
                        <i class="fas fa-expand maximize hidden"></i>
                    </div>
                </div>
                <div class="kpi-card">
                    <div id="feedbackChart" class="chart-container"></div>
                    <div class="kpi-content">
                        <p class="kpi-value">Positive: 78%</p>
                    </div>
                    <p class="minimized-summary">FEEDBACK ACTIVITY: Positive: 78%</p>
                    <div class="kpi-actions">
                        <i class="fas fa-minus minimize"></i>
                        <i class="fas fa-expand maximize hidden"></i>
                    </div>
                </div>
                <div class="kpi-card">
                    <div id="ordersChart" class="chart-container"></div>
                    <div class="kpi-content">
                        <p class="kpi-value">Success: 75%</p>
                    </div>
                    <p class="minimized-summary">ORDERS / RETURNS: Success: 75%</p>
                    <div class="kpi-actions">
                        <i class="fas fa-minus minimize"></i>
                        <i class="fas fa-expand maximize hidden"></i>
                    </div>
                </div>
            </div>
            <div id="kpiContainer" class="kpi-container">
                <div class="chart-panel">
                    <h3 class="chart-title">Total Expenses</h3>
                    <div id="expensesChart"></div>
                    <div class="kpi-chart-content">
                        <h3 class="kpi-chart-title">ORDERS / RETURNS</h3>
                        <p class="kpi-chart-value">Success: 75%</p>
                    </div>
                </div>
                <div class="chart-panel">
                    <h3 class="chart-title">Daily Refunds</h3>
                    <div id="refundsChart"></div>
                    <div class="kpi-chart-content">
                        <h3 class="kpi-chart-title">ORDERS / RETURNS</h3>
                        <p class="kpi-chart-value">Success: 75%</p>
                    </div>
                </div>
            </div>
			<!-- To-Do List KPI Panel -->
<div class="todo-panel">
    <h2 class="text-xl font-semibold mb-4">Task Manager (Jira-Style)</h2>

    <!-- Add Task Button -->
    <button class="add-task-btn" onclick="addNewTask()">+ Add Task</button>

    <!-- Kanban Board -->
    <div class="todo-container">

        <!-- Plan Column -->
        <div class="todo-column todo-plan" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h3>Plan</h3>
            <div class="task-list" id="plan" ondrop="drop(event)" ondragover="allowDrop(event)">
                <div class="todo-item" draggable="true" ondragstart="drag(event)" id="task1">Define Q2 Goals</div>
            </div>
        </div>

        <!-- To-Do Column -->
        <div class="todo-column todo-todo" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h3>To Do</h3>
            <div class="task-list" id="todo">
                <div class="todo-item" draggable="true" ondragstart="drag(event)" id="task2">Prepare Sales Report</div>
            </div>
        </div>

        <!-- In Progress Column -->
        <div class="todo-column todo-inprogress" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h3>In Progress</h3>
            <div class="task-list" id="inprogress">
                <div class="todo-item" draggable="true" ondragstart="drag(event)" id="task3">Meeting with Clients</div>
            </div>
        </div>

        <!-- Done Column -->
        <div class="todo-column todo-done" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h3>Done</h3>
            <div class="task-list" id="done">
                <div class="todo-item" draggable="true" ondragstart="drag(event)" id="task4">Budget Review</div>
            </div>
        </div>

        <!-- Need to Review Column -->
        <div class="todo-column todo-review" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h3>Need to Review</h3>
            <div class="task-list" id="review">
                <div class="todo-item" draggable="true" ondragstart="drag(event)" id="task5">Finalize Presentation</div>
            </div>
        </div>

    </div>
</div>
<!-- Chat KPI Panel -->
<div class="chat-widget kpi-card">
    <!-- Online/Offline User List -->
    <div class="chat-users">
        <h3>Users</h3>
        <div id="userList">
            <!-- Users will be dynamically inserted here -->
        </div>
    </div>

    <!-- Chat Messages -->
    <div class="chat-messages">
        <div class="message-container" id="messageContainer"></div>

        <!-- Chat Input -->
        <div class="chat-input">
            <input type="text" id="chatInput" placeholder="Type a message..." />
            <button onclick="sendMessage()">Send</button>
        </div>
    </div>
</div>


        </div>


        <script>
		
		// Mock user list
const users = [
    { id: 1, name: "John Doe", status: "online", avatar: "https://xsgames.co/randomusers/avatar.php?g=male" },
    { id: 2, name: "Alice Smith", status: "away", avatar: "https://xsgames.co/randomusers/avatar.php?g=female" },
    { id: 3, name: "Mark Johnson", status: "offline", avatar: "https://xsgames.co/randomusers/avatar.php?g=male" },
    { id: 4, name: "Sarah Lee", status: "online", avatar: "https://xsgames.co/randomusers/avatar.php?g=female" }
];

// Load users into sidebar
function loadUsers() {
    let userList = document.getElementById("userList");
    userList.innerHTML = ""; // Clear existing users

    users.forEach(user => {
        let userDiv = document.createElement("div");
        userDiv.classList.add("chat-user");
        userDiv.innerHTML = `
            <img src="${user.avatar}" alt="${user.name}">
            <span>${user.name}</span>
            <div class="user-status ${user.status}"></div>
        `;
        userDiv.onclick = () => selectUser(user);
        userList.appendChild(userDiv);
    });
}

// Select a user for chat
let selectedUser = users[0]; // Default to first user
function selectUser(user) {
    selectedUser = user;
    document.getElementById("messageContainer").innerHTML = `<p>Chatting with <strong>${user.name}</strong></p>`;
}

// Send a chat message
function sendMessage() {
    let input = document.getElementById("chatInput");
    let messageContainer = document.getElementById("messageContainer");

    if (input.value.trim() !== "") {
        let messageDiv = document.createElement("div");
        messageDiv.classList.add("message", "sent");
        messageDiv.innerText = input.value;
        messageContainer.appendChild(messageDiv);
        input.value = "";

        // Auto Reply (Mock Response)
        setTimeout(() => {
            let replyDiv = document.createElement("div");
            replyDiv.classList.add("message", "received");
            replyDiv.innerText = `${selectedUser.name}: Got it!`;
            messageContainer.appendChild(replyDiv);
        }, 1000);
    }
}

// Mock Status Change
function updateUserStatus() {
    users.forEach(user => {
        let statuses = ["online", "offline", "away"];
        user.status = statuses[Math.floor(Math.random() * statuses.length)];
    });
    loadUsers();
}

// Load users on page load
document.addEventListener("DOMContentLoaded", () => {
    loadUsers();
    setInterval(updateUserStatus, 5000); // Update user status every 5 sec
});

		
		// Allow dropping items
function allowDrop(event) {
    event.preventDefault();
}

// Drag function
function drag(event) {
    event.dataTransfer.setData("text", event.target.id);
}

// Drop function
function drop(event) {
    event.preventDefault();
    let taskId = event.dataTransfer.getData("text");
    let draggedElement = document.getElementById(taskId);

    // Append to new column
    event.target.closest(".task-list").appendChild(draggedElement);

    // Save to Local Storage
    saveTasks();
}

// Add New Task Function
function addNewTask() {
    let taskText = prompt("Enter new task:");
    if (taskText) {
        let newTask = document.createElement("div");
        let taskId = "task" + new Date().getTime();
        
        newTask.classList.add("todo-item");
        newTask.setAttribute("draggable", "true");
        newTask.setAttribute("id", taskId);
        newTask.setAttribute("ondragstart", "drag(event)");
        newTask.innerText = taskText;

        // Add to the To-Do column by default
        document.getElementById("todo").appendChild(newTask);

        // Save to Local Storage
        saveTasks();
    }
}

// Save Tasks to Local Storage
function saveTasks() {
    let tasks = {};
    document.querySelectorAll(".task-list").forEach(list => {
        let columnId = list.id;
        let taskArray = [];
        list.childNodes.forEach(task => {
            if (task.id) {
                taskArray.push({ id: task.id, text: task.innerText });
            }
        });
        tasks[columnId] = taskArray;
    });

    localStorage.setItem("tasks", JSON.stringify(tasks));
}

// Load Tasks from Local Storage
function loadTasks() {
    let savedTasks = localStorage.getItem("tasks");
    if (savedTasks) {
        let tasks = JSON.parse(savedTasks);
        for (let column in tasks) {
            tasks[column].forEach(taskData => {
                let newTask = document.createElement("div");
                newTask.classList.add("todo-item");
                newTask.setAttribute("draggable", "true");
                newTask.setAttribute("id", taskData.id);
                newTask.setAttribute("ondragstart", "drag(event)");
                newTask.innerText = taskData.text;

                document.getElementById(column).appendChild(newTask);
            });
        }
    }
}

// Load tasks on page load
document.addEventListener("DOMContentLoaded", loadTasks);




		const yearlyExpensesData = [
    { year: 2020, amount: 45000 },
    { year: 2021, amount: 47000 },
    { year: 2022, amount: 52000 },
    { year: 2023, amount: 48000 },
    { year: 2024, amount: 50000 }
];

const dailyRefundsData = [
    { date: '2025-01-20', amount: 7000 },
    { date: '2025-01-21', amount: 5000 },
    { date: '2025-01-22', amount: 8000 },
    { date: '2025-01-23', amount: 6000 },
    { date: '2025-01-24', amount: 9000 }
];


function createChart(container, title, data, type = 'pie') {
    const chartOptions = {
        chart: { type: type},
        title: { text: title },
        series: []
    };

    if (type === 'pie') {
        chartOptions.series.push({
            name: title,
            data: data.map(item => [item.name, item.value])
        });
        chartOptions.plotOptions = {
            pie: {
                innerSize: '70%',
                dataLabels: { enabled: false },
                colors: ['#36A2EB', '#FF6384']
            }
        };
    } else {
        chartOptions.xAxis = {
            categories: data.map(item => item.label)
        };
        chartOptions.yAxis = {
            title: { text: 'Amount ($)' }
        };
        chartOptions.series.push({
            name: title,
            data: data.map(item => item.value)
        });
        if (type === 'area') {
            chartOptions.plotOptions = {
                area: { fillOpacity: 0.2 }
            };
        } else if (type === 'column') {
            chartOptions.plotOptions = {
                column: { colorByPoint: true }
            };
        }
    }

    Highcharts.chart(container, chartOptions);
}

createChart('salesChart', 'Sales', [
    { name: 'Seller A', value: 60 },
    { name: 'Others', value: 40 }
]);

createChart('revenueChart', 'Revenue/Expenses', [
    { name: 'Revenue', value: 750000 },
    { name: 'Expenses', value: 250000 }
]);

createChart('feedbackChart', 'Feedback', [
    { name: 'Positive', value: 78 },
    { name: 'Negative', value: 22 }
]);

createChart('ordersChart', 'Orders/Returns', [
    { name: 'Orders', value: 75 },
    { name: 'Returns', value: 25 }
]);

createChart('expensesChart', 'Total Expenses (Yearly)', yearlyExpensesData.map(item => ({
    label: item.year.toString(),
    value: item.amount
})), 'area');

createChart('refundsChart', 'Daily Refunds', dailyRefundsData.map(item => ({
    label: item.date,
    value: item.amount
})), 'column');


            // Minimize & Maximize KPI Cards
            $(".minimize").click(function () {
                let parent = $(this).closest(".kpi-card");
                parent.addClass("minimized");
                $(this).hide();
                parent.find(".maximize").show();
                parent.find(".chart-container").hide();
                parent.find(".kpi-content .summary").show();
            });

            $(".maximize").click(function () {
                let parent = $(this).closest(".kpi-card");
                parent.removeClass("minimized");
                $(this).hide();
                parent.find(".minimize").show();
                parent.find(".chart-container").fadeIn();
                parent.find(".kpi-content .summary").hide();
            });

            const sidebar = document.querySelector(".sidebar");
            const sidebarToggler = document.querySelector(".sidebar-toggler");
            const menuToggler = document.querySelector(".menu-toggler");

            // Ensure these heights match the CSS sidebar height values
            let collapsedSidebarHeight = "56px"; // Height in mobile view (collapsed)
            let fullSidebarHeight = "calc(100vh - 32px)"; // Height in larger screen

            // Toggle sidebar's collapsed state
            sidebarToggler.addEventListener("click", () => {
                sidebar.classList.toggle("collapsed");
            });

            // Update sidebar height and menu toggle text
            const toggleMenu = (isMenuActive) => {
                sidebar.style.height = isMenuActive ? `${sidebar.scrollHeight}px` : collapsedSidebarHeight;
                menuToggler.querySelector("span").innerText = isMenuActive ? "close" : "menu";
            };

            // Toggle menu-active class and adjust height
            menuToggler.addEventListener("click", () => {
                toggleMenu(sidebar.classList.toggle("menu-active"));
            });

            // (Optional code): Adjust sidebar height on window resize
            window.addEventListener("resize", () => {
                if (window.innerWidth >= 1024) {
                    sidebar.style.height = fullSidebarHeight;
                } else {
                    sidebar.classList.remove("collapsed");
                    sidebar.style.height = "auto";
                    toggleMenu(sidebar.classList.contains("menu-active"));
                }
            });

            function toggleSidebar() {
                document.getElementById("sidebar").classList.toggle("collapsed");
                document.getElementById("mainContainer").classList.toggle("full");
            }
        </script>
    </body>
</html>
